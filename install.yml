- hosts: all
  tags:
    - tools
  tasks:
    - name: Install common tools
      package:
        name: "{{ item }}"
      with_items:
        - apt-transport-https 
        - ca-certificates
        - software-properties-common
        - gnupg
        - net-tools
        - nmap
        - locate
        - nano
        - htop
        - wget
        - curl
        - unzip
        - zip

- hosts: all
  vars:
    backports_distribution: "{{ansible_distribution_release}}"
  roles:
    - jnv.debian-backports
  tags:
    - backports

# https://github.com/geerlingguy/ansible-role-docker
- hosts: all
  vars:
    # firewall_disable_firewalld: true
    # firewall_disable_ufw: true
    firewall_allowed_tcp_ports:
      - "22"   # ssh
      - "80"   # http
      - "9090" # cockpit
      - "8080" # traefik webui
      - "443"  # https
      - "2376" # docker
      - "2377" # docker
      - "7946" # docker container network discovery tcp
      - "24007" # glusterfs
      - "24008" # glusterfs
      - "49152" # glusterfs: /gluster/brick
      - "111"   # glusterfs: portmapper
      - "3306"   # mysql
      - "9000"   # portainer
      # - "4567"   # galera
      # - "4568"   # galera
      # - "4444"   # galera
    firewall_allowed_udp_ports:
      - "111"   # glusterfs: portmapper
      - "7946"  # docker container network discovery udp
      - "4789"  # docker container ingress network
      # - "4567"  # galera in case of for multicast
  roles:
    - geerlingguy.firewall
  tags:
    - firewall
    
- hosts: all
  tags:
    - cockpit
  tasks:
    - name: Install Cockpit packages
      apt:
        name: ['cockpit', 'cockpit-docker', 'cockpit-pcp'] # - cockpit-machines
        default_release: "{{ansible_distribution_release}}-backports"
        state: latest
    - name: ensure Cockpit service is running
      service:
        name: cockpit
        enabled: yes
        state: started

- hosts: swarm
  vars:
    pip_install_packages:
      - name: docker
  roles:
    - geerlingguy.pip # used to build docker images (need update?)
    - geerlingguy.docker
  tags:
    - swarm-install

- hosts: swarm_managers
  vars:
    swarm_type_of_node: manager
    swarm_leader_address: "{{ hostvars[groups['swarm_managers'][0]]['ansible_host'] }}"
  roles:
    - jclaveau.swarm
  tags:
    - swarm
    - swarm-start

- hosts: swarm_workers
  vars:
    swarm_type_of_node: worker
    swarm_leader_address: "{{ hostvars['manager1']['ansible_host'] }}"
  roles:
    - jclaveau.swarm
  tags:
    - swarm
    - swarm-start

- hosts: gluster
  tags:
    - gluster
  roles:
    - gluster
  vars:
    volumes:
      - volume_name: test-shared-volume
        mount_dir: /mnt/gluster_test
        brick_dir: /srv/gluster/brick_test
        replicas: 2
        state: present
      - volume_name: swarm-shared-volume
        mount_dir: /mnt/gluster
        brick_dir: /srv/gluster/brick
        replicas: 2
        state: absent
      - volume_name: admin-everywhere
        mount_dir: /mnt/gluster-admin-everywhere
        brick_dir: /srv/gluster/admin-everywhere
        replicas: "{{ ansible_play_hosts_all | length }}" # everywhere
        state: present
      - volume_name: apps-everywhere
        mount_dir: /mnt/gluster-apps-everywhere
        brick_dir: /srv/gluster/apps-everywhere
        replicas: "{{ ansible_play_hosts_all | length }}" # everywhere
        state: present
      - volume_name: apps-saved
        mount_dir: /mnt/gluster-apps-saved
        brick_dir: /srv/gluster/apps-saved
        replicas: 2
        state: present
