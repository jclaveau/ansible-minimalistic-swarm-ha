# - name: Check if OVH plugin exists
  # command: dpkg-query -l python3-certbot-dns-ovh
  # register: plugin_check
  # failed_when: false
    
# - include_tasks: certbot_admin-domain_debian.yml
  # when: plugin_check.stderr.find('no packages found') == -1

- name: Add hosts from inventory to /etc/hosts
  tags:
    - hosts
  blockinfile:
    path: /etc/hosts
    block: |
      {% for host in groups['all'] %}
      {% if hostvars[host]['ansible_host'] == ansible_default_ipv4.address %}
      127.0.0.1 {{ host }}
      {% else %}
      {{ hostvars[host]['ansible_host'] }} {{ host }}
      {% endif %}
      {% endfor %}

- name: dbg
  debug:
    var: volumes

- name: Ensure Gluster brick directories exist.
  file: "path={{ item.brick_dir }} state=directory mode=0775"
  loop: "{{ volumes }}"

- name: Ensure Gluster mount directories exist.
  file: "path={{ item.mount_dir }} state=directory mode=0775"
  loop: "{{ volumes }}"

- name: Configure Gluster volume.
  # debugger: on_failed
  gluster_volume:
    state: present
    name: "{{ item.volume_name }}"
    brick: "{{ item.brick_dir }}"
    replicas: "{{ item.replicas }}"
    cluster: "{{ ansible_play_hosts_all | join(',') }}"
    host: "{{ inventory_hostname }}"
    quota: "{{ inventory_hostname }}"
    force: yes # allow the volume to be on the / partition
  # loop: "{{ volumes }}"
  loop: "{{ volumes }}"
  # run_once: true
  

# - name: Ensure Gluster volume is mounted.
  # mount:
    # name: "{{ gluster_mount_dir }}"
    # src: "{{ inventory_hostname }}:/{{ gluster_brick_name }}"
    # fstype: glusterfs
    # opts: "defaults,_netdev"
    # state: mounted

# Local mount
# umount /mnt
# chown -R username /etc/fstab /mnt
# chown -R username /mnt 
# echo 'localhost:/swarm-gfs /mnt glusterfs defaults,_netdev,backupvolfile-server=localhost 0 0' >> /etc/fstab 
# mount.glusterfs localhost:/swarm-gfs /mnt 
# chown -R username:docker /mnt
